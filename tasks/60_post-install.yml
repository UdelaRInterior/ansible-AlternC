---
# Post-installation tasks of AlternC Ansible role

- name: Configurar redirección de tráfico HTTP a HTTPS
  template:
    dest: "/etc/apache2/sites-available/000-default.conf"
    src: etc/apache2/sites-available/000-default.conf.j2
    owner: root
    group: root
    mode: "0644"
  notify:
    - AlternC - Restart Apache2


- name: Configurar tamaño máximo permitido en la subida de archivos
  lineinfile:
    path: "/etc/alternc/templates/alternc/apache2.conf"
    regexp: "{{ alternc_apache_php_ini_conf.parameter }}"
    insertafter: '<Directory /usr/share/alternc/panel/admin/>'
    line: "  {{ alternc_apache_php_ini_conf.parameter }} {{ alternc_apache_php_ini_conf.value }}"
    backup: "{{ ansible_loop.first }}"
  loop: "{{ alternc_apache_php_ini_configurations }}"
  loop_control:
    loop_var: alternc_apache_php_ini_conf
    extended: yes
  tags: phpalternc
  notify:
    - AlternC - Restart Apache2


- name: Configurar tamaño máximo permitido en la subida de archivos a PHPMyAdmin
  lineinfile:
    path: "/etc/alternc/templates/alternc/apache2.conf"
    regexp: "{{ alternc_phpmyadmin_conf.parameter }}"
    insertafter: '<Directory /usr/share/phpmyadmin>'
    line: "  {{ alternc_phpmyadmin_conf.parameter }} {{ alternc_phpmyadmin_conf.value }}"
  loop: "{{ alternc_phpmyadmin_configurations }}"
  loop_control:
    loop_var: alternc_phpmyadmin_conf
  tags: phpalternc
  notify:
  - AlternC - Restart Apache2
  - run alternc.install


- name: Asegurar largo suficiente de blowfish_secret
  lineinfile:
    path: "/etc/alternc/templates/alternc/phpmyadmin.inc.php"
    regexp: \$cfg\[\'blowfish_secret\'\]
    line: "$cfg['blowfish_secret'] = '{{ alternc_phpmyadmin_blowfish_secret }}';"
    backup: yes
  tags: phpalternc
  notify:
  - AlternC - Restart Apache2
  - run alternc.install

- name: Configurar servidor ProFTPd
  lineinfile:
    path: "/etc/alternc/templates/proftpd/proftpd.conf"
    regexp: "{{ proftpd_conf.parameter }}"
    line: "{{ proftpd_conf.parameter }}        {{ proftpd_conf.value }}"
    backup: "{{ ansible_loop.first }}"
  loop: "{{ alternc_proftpd_configurations }}"
  loop_control:
    loop_var: proftpd_conf
    extended: yes
  tags: proftpd
  notify:
  - AlternC - Restart ProFTPd
  - run alternc.install

- name: Configurar servidor postfix
  lineinfile:
    path: '/etc/alternc/templates/alternc/postfix/postfix.cf'
    regexp: "^{{ postfix_conf.parameter }}"
    line: "{{ postfix_conf.parameter }} = {{ postfix_conf.value }}"
    backup: "{{ ansible_loop.first }}"
  loop: "{{ alternc_postfix_main_configurations }}"
  loop_control:
    loop_var: postfix_conf
    extended: yes
  tags: postfix
  notify:
  - AlternC - Restart Postfix
  - run alternc.install

- name: Configurar servidor postfix para un alternc-slave
  lineinfile:
    path: '/etc/alternc/templates/alternc/postfix/postfix-slave.cf'
    regexp: "^{{ postfix_conf.parameter }}"
    line: "{{ postfix_conf.parameter }} = {{ postfix_conf.value }}"
    backup: "{{ ansible_loop.first }}"
  loop: "{{ alternc_postfix_main_configurations }}"
  loop_control:
    loop_var: postfix_conf
    extended: yes
  tags: postfix
  notify:
  - AlternC - Restart Postfix
  - run alternc.install

- name: Extract bind9 service state
  service_facts:
#  tags: explore

- name: AppArmor configuration hook
  block:

  - name: Parse apparmor config if bind9 is stopped
    command: apparmor_parser -r /etc/apparmor.d/usr.sbin.named
  #  tags: explore

  - name: Restart bind9
    service:
      name: bind9
      state: restarted

  when: ansible_facts.services["bind9"].state == 'stopped' or ansible_facts.services["bind9"].state == 'inactive'
  

#- name: Ejecutar alternc.install para reflejar los cambios de configuración
#  shell: "alternc.install"
- name: running alternc.install and other handlers
  meta: flush_handlers

- debug: 
    msg: "{{ alternc_install_result }}"
  when: alternc_install_result is defined

...
